<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
	default-lazy-init="true">

	<!-- This is "root" Application Context -->

	<context:annotation-config />
	
	<bean id="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	

	<bean id="reportsServiceUrl" class="java.lang.String">
		<constructor-arg value="http://dev.ekolky.anext.sk:9080/mspreports" />
	</bean>

	<context:component-scan base-package="sk.posta.ekolky.oek.config"
		use-default-filters="false">
		<context:include-filter type="regex"
			expression="sk.posta.ekolky.oek.config.TestCoreConfig" />
	</context:component-scan>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="${dbConfigFile:db2test.properties}" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="showSql" class="java.lang.String">
		<constructor-arg value="true" />
	</bean>

	<bean id="sqlDialect" class="java.lang.String">
		<constructor-arg value="${jdbc.dialect}" />
	</bean>

	<bean id="assessmentConfirmIdPrefixMsp" class="java.lang.String">
		<constructor-arg value="${assessmentConfirmIdPrefixMsp}" />
	</bean>

	<bean id="assessmentConfirmIdPrefixRefund" class="java.lang.String">
		<constructor-arg value="M99" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter" ref="vendorAdapter" />
		<property name="packagesToScan" value="sk.posta.ekolky.oek.bo.entity" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.default_schema" value="${jdbc.schema:OEK}"/>
				<entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>
				<entry key="hibernate.cache.use_second_level_cache" value="false"/>
				<entry key="hibernate.cache.use_query_cache" value="false"/>
				<entry key="javax.persistence.sharedCache.mode" value="NONE"/>
			</map>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="session">
					<bean class="org.springframework.context.support.SimpleThreadScope" />
				</entry>
				<entry key="request">
					<bean class="org.springframework.context.support.SimpleThreadScope" />
				</entry>
			</map>
		</property>
	</bean>

	<bean class="sk.posta.ekolky.oek.jms.NotificationServiceQueueStub"
		id="notificationServiceQueue" />

	<bean class="sk.posta.ekolky.pep.account.Estamp_Service" id="EstampServiceHttpService" />

	<bean class="sk.posta.ekolky.pep.account.Assessment_Service" id="AssessmentServiceHttpService" />

	<bean class="sk.posta.ekolky.pep.account.Infra" id="InfraServiceHttpService" />

	<bean class="sk.posta.ekolky.pep.account.Cashdesk" id="CashdeskServiceHttpService" />

	<bean class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
		id="EstampServiceWS">
		<property name="serviceInterface" value="sk.posta.ekolky.pep.account.EstampPortType" />
		<property name="jaxWsService" ref="EstampServiceHttpService" />
		<property name="endpointAddress"
			value="http://dev.ekolky.anext.sk:8081/estamp/soa/server/r1_2/estamp" />
	</bean>

	<bean class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
		id="AssessmentServiceWS">
		<property name="serviceInterface"
			value="sk.posta.ekolky.pep.account.AssessmentPortType" />
		<property name="jaxWsService" ref="AssessmentServiceHttpService" />
		<property name="endpointAddress"
			value="http://dev.ekolky.anext.sk:8081/estamp/soa/server/r1_2/assessment" />
	</bean>

	<bean class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
		id="InfraServiceWS">
		<property name="serviceInterface" value="sk.posta.ekolky.pep.account.InfraPortType" />
		<property name="jaxWsService" ref="InfraServiceHttpService" />
		<property name="endpointAddress"
			value="http://dev.ekolky.anext.sk:8081/estamp/soa/server/r1_2/infra" />
	</bean>

	<bean class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
		id="CashdeskServiceWS">
		<property name="serviceInterface" value="sk.posta.ekolky.pep.account.CashdeskPortType" />
		<property name="jaxWsService" ref="CashdeskServiceHttpService" />
		<property name="endpointAddress"
			value="http://dev.ekolky.anext.sk:8081/estamp/soa/server/r1_2/cashdesk" />
	</bean>

	<bean id="quartzConfig" class="java.lang.String">
		<constructor-arg
			value="classpath:/sk/posta/ekolky/oek/${quartzServer:quartz-was.properties}" />
	</bean>

	<bean id="pepUtil" class="sk.posta.ekolky.oek.common.util.PepServerProxy">
		<property name="throwException" value="false" />
	</bean>

	<aop:config>
		<aop:aspect ref="pepUtil">
			<aop:pointcut expression="execution(* sk.posta.ekolky.pep.account.*.*(..))"
				id="adapterService" />
			<aop:before pointcut-ref="adapterService" method="processPepCall" />
		</aop:aspect>
	</aop:config>

</beans>
